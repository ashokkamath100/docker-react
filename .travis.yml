sudo: required
# sudo: required is necessary because we are using Docker
# which requires super user permissions
# so we tell travis we need this level of permissions to 
# execute this build 

#this below tells Travis CI that we need docker ready
services:
  - docker

# this prompts a series of commands to be executed
# before our tests are ran.
# They will set up the environment. 
before_install:
# we want to build the docker image before the tests are
# ran 
  - docker build -t jacksparrow19/docker-react -f Dockerfile.dev . 

# the script section will contain all the commands that are 
# necessary to run our test suite.
# Travis CI will be watching the output of each of the 
# commands and if it sees that one of the commands 
# returned nonzero status, then Travis will assume the test suite failed
script:
  - docker run -e CI=true jacksparrow19/docker-react npm run test


# therefore, whenever we push a commit to Github, Travis will see that
# and then execute the commands here 

deploy:
# travis CI is preconfigured with some hosting providers like aws elb and digital ocean
# so it knows what we're talking about when we say elastic beanstalk
  provider: elasticbeanstalk
  region: "us-east-1"
  # give our app a name
  app: "docker"
  # tell Travis the name of the environment we set up on elastic beanstalk
  env: "Frontend-env"
  # tell Travis the s3 bucket that was created 
  # this bucket will be reused for all the different elastic beanstalk environments
  # you create 
  bucket_name: "elasticbeanstalk-us-east-1-555909762796"
  # inside the bucket, we use the folder dedicated to our app
  # which we named earlier in this travis file
  # this folder will be created on the first deployment to ELB
  bucket_path: "docker"
  on:
    branch: main
  access_key_id: $AWS_ACCESS_KEY_ID
  secret_access_key: "$AWS_SECRET_ACCESS_KEY"